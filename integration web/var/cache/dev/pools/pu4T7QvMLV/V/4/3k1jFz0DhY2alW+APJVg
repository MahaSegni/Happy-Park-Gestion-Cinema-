<?php //%255BApp%255CEntity%255CCinema%2524film%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
        clone ($p['Doctrine\\ORM\\Mapping\\JoinColumns'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumns')),
        clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
    ],
    null,
    [
        'stdClass' => [
            'targetEntity' => [
                'Film',
            ],
            'value' => [
                1 => [
                    $o[2],
                ],
            ],
            'name' => [
                2 => 'film',
            ],
            'referencedColumnName' => [
                2 => 'id_film',
            ],
            'message' => [
                3 => 'film invalid',
            ],
            'groups' => [
                3 => [
                    'Default',
                ],
            ],
        ],
        'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
            'groups' => [
                4 => [
                    'post:read',
                ],
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[3],
        $o[4],
    ],
    []
); }];
